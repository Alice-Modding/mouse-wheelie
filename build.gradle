plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "+mc" + project.minecraft_version
group = project.maven_group

minecraft {
	refmapName = "${project.mod_id}-refmap.json"
}

repositories {
	mavenLocal()
	maven {
		name "Fabric"
		url "http://maven.fabricmc.net/"
	}
	maven {
		name "jitpack"
		url "https://jitpack.io"
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	include "net.fabricmc.fabric-api:fabric-api-base:0.1.3+12a8474c34"
	include "net.fabricmc.fabric-api:fabric-events-interaction-v0:0.3.0+04b9979434"
	include "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:0.1.2+1a47cd7834"
	include "net.fabricmc.fabric-api:fabric-keybindings-v0:0.1.1+dfdb52d634"
	include "net.fabricmc.fabric-api:fabric-tool-attribute-api-v1:1.0.2+526cfc4b34"
	include "net.fabricmc.fabric-api:fabric-mining-levels-v0:0.1.2+b764ce9934"
	include "net.fabricmc.fabric-api:fabric-networking-v0:0.1.9+1a47cd7834"
	include "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.14+2fd224ca34"
	include "net.fabricmc.fabric-api:fabric-tag-extensions-v0:0.2.4+2fd224ca34"
	modImplementation "net.fabricmc.fabric-api:fabric-api-base:0.1.3+12a8474c34"
	modImplementation "net.fabricmc.fabric-api:fabric-events-interaction-v0:0.3.0+04b9979434"
	modImplementation "net.fabricmc.fabric-api:fabric-events-lifecycle-v0:0.1.2+1a47cd7834"
	modImplementation "net.fabricmc.fabric-api:fabric-keybindings-v0:0.1.1+dfdb52d634"
	modImplementation "net.fabricmc.fabric-api:fabric-tool-attribute-api-v1:1.0.2+526cfc4b34"
	modImplementation "net.fabricmc.fabric-api:fabric-mining-levels-v0:0.1.2+b764ce9934"
	modImplementation "net.fabricmc.fabric-api:fabric-networking-v0:0.1.9+1a47cd7834"
	modImplementation "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.14+2fd224ca34"
	modImplementation "net.fabricmc.fabric-api:fabric-tag-extensions-v0:0.2.4+2fd224ca34"

	modImplementation "net.fabricmc.fabric-api:fabric-item-groups-v0:0.1.12+2fd224ca34"

	/*modImplementation("io.github.prospector:modmenu:+") {
		exclude group: "net.fabricmc.fabric-api"
	}*/

	modImplementation("com.github.siphalor:tweed-api:${project.tweed_version}") {
		exclude group: "net.fabricmc.fabric-api"
		exclude module: "modmenu"
	}
	include "com.github.siphalor:tweed-api:${project.tweed_version}"
	
	modImplementation("com.github.siphalor:amecs-api:${project.amecs_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}
	include "com.github.siphalor:amecs-api:${project.amecs_version}"

	modImplementation("me.shedaniel.cloth:config-2:${project.clothconfig_version}") {
		exclude group: "net.fabricmc.fabric-api"
		exclude module: "modmenu"
	}
	include "me.shedaniel.cloth:config-2:${project.clothconfig_version}"
}

sourceSets.main.java.exclude("**/ModMenu*")

processResources {
	inputs.property "version", version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
